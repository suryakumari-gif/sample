Working with LOB values
=======================
Files are known as LOB's.

We have two types of LOB's.

1) BLOB (Binary large Object)
ex:
	images, audio, video , avi file and etc.

2) CLOB (Character large Object)
ex:
	text file, advanced text file and etc.

Using simple Statement object we can place LOB values directly to query parameter.

To overcome this limitation we need to use PreparedStatement object.

We can set LOB values to query parameter by using following methods.
ex:
	ps.setBLOB(-,-,-)/ps.setBinaryStream(-,-,-)
	ps.setCLOB(-,-,-)/ps.setCharacterStream(-,-,-)


emp2 table
=========
drop table emp2;

create table emp2(eid number(3),ename varchar2(10),ephoto BLOB);


PhotoInsertApp.java
-------------------
package com.ihub.www;

import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class PhotoInsertApp 
{
	public static void main(String[] args)throws Exception  
	{
			Scanner sc=new Scanner(System.in);
			System.out.println("Enter the employee id :");
			int id=sc.nextInt();
			
			System.out.println("Enter the employee name :");
			String name=sc.next();
			
			//locate a file 
			File f=new File("src/com/ihub/www/rock.jpg");
			FileInputStream fis=new FileInputStream(f);
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			
			String qry="insert into emp2 values(?,?,?)";
			
			PreparedStatement ps=con.prepareStatement(qry);
			
			//set the values
			ps.setInt(1, id);
			ps.setString(2, name);
			ps.setBinaryStream(3,fis,(int)f.length());
			
			//execute 
			int result = ps.executeUpdate();
			
			if(result==0)
				System.out.println("No Record Inserted");
			else
				System.out.println("Record Inserted");
			
			ps.close();
			con.close();
			
	}
}

PhotoRetrieveApp.java
----------------------
package com.ihub.www;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class PhotoRetrieveApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		String qry="select * from emp2";
		ResultSet rs=st.executeQuery(qry);
		while(rs.next())
		{
			InputStream is = rs.getBinaryStream(3);
			
			FileOutputStream fos=new FileOutputStream("D:\\hari.png");
			
			int byteReads=0;
			byte[] buff=new byte[200];
			
			while((byteReads=is.read(buff))!=-1)
			{
				fos.write(buff, 0, byteReads);
			}
			
			fos.close();
		}
		System.out.println("Please check the location");
		rs.close();
		st.close();
		con.close();
	}
}

Standard procedure to write JDBC application
============================================
package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class StandardApp 
{
	public static void main(String[] args) 
	{
		final String DRIVER="oracle.jdbc.driver.OracleDriver";
		final String URL="jdbc:oracle:thin:@localhost:1521:XE";
		final String USERNAME="system";
		final String PASSWORD="admin";
		final String QUERY="select * from student";
		
		Connection con=null;
		PreparedStatement ps=null;
		ResultSet rs=null;
		try
		{
			Class.forName(DRIVER);
			con=DriverManager.getConnection(URL,USERNAME,PASSWORD);
			ps=con.prepareStatement(QUERY);
			//execute 
			rs=ps.executeQuery();
			while(rs.next())
			{
				System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
			}
			rs.close();
			ps.close();
			con.close();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
}

Working with properties file 
=============================
In regular, intervals our DBA will change username and password for security reason.

It is never recommanded to pass database properties directly to the application.

It is always recommanded to read database properties from properties file.

A properties file contains key and value pair.

dbdetails.properties 
-------------------
driver= oracle.jdbc.driver.OracleDriver
url= jdbc:oracle:thin:@localhost:1521:XE
username= system 
password= admin 


ex:
---
package com.ihub.www;

import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;

public class PropertiesFileApp 
{
	public static void main(String[] args)throws Exception  
	{
		//locate a properties file
		FileInputStream fis=new FileInputStream("src/com/ihub/www/dbdetails.properties");
	
		//create a Properties class object 
		Properties p=new Properties();
		
		//load the data from file to class
		p.load(fis);
		
		//read the data from class
		String s1=p.getProperty("driver");
		String s2=p.getProperty("url");
		String s3=p.getProperty("username");
		String s4=p.getProperty("password");
		
		Class.forName(s1);
		Connection con=DriverManager.getConnection(s2,s3,s4);
		Statement st=con.createStatement();
		String qry="select * from student";
		ResultSet rs=st.executeQuery(qry);
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		rs.close();
		st.close();
		con.close();
	}
}







































































